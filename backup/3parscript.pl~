#!/usr/bin/perl
use warnings;
use strict;
use Config::Tiny;
use Net::SSH2;
use MIME::Lite;
#######################################################

my $hp3parconfig = Config::Tiny->new();
   $hp3parconfig = Config::Tiny->read('perl_3par_config.txt');
my $mailserver = $hp3parconfig->{params}->{smtp_server_name};
my $arraylist = $hp3parconfig->{params}->{hp3par_array_list};
my $mailfrom = $hp3parconfig->{params}->{mail_from};
my $mailto = $hp3parconfig->{params}->{mail_to};
my $username = $hp3parconfig->{params}->{username};
my $password = $hp3parconfig->{params}->{password};
my $hp3parcmd = $hp3parconfig->{params}->{hp3par_command};
my $hp3parlistfh; #file handle for the 3par name and ip list
my $ipfile_error_msg;
my $parafileFH;
my ($hp3par_name, $hp3par_ip);

MIME::Lite->send ("smtp", "$mailserver");
if (!open $hp3parlistfh, "<" , "test_3par_array_ip_list.txt")
{
    
    my $ipfile_error_msg = MIME::Lite->new(
				From    => $mailfrom,
				To      => $mailto,
				Data    => "IP List File Not Found For $0 Script on $ENV{COMPUTERNAME}. $!. $^E\n",
				Subject => "Error:$arraylist file not found:\n",
				    
		);
    
    $ipfile_error_msg->send();
    
    
  exit (0);  
    
}

unlink "para.txt" if -e "para.txt"; #Removes para.txt file if it already exists.
while (<$hp3parlistfh>)
{
    next if /^#/; #ignore the lines that begin with a #/
    ($hp3par_name, $hp3par_ip) = split /\s+/;
    
    my $ssh_3par = Net::SSH2->new();
   
    print $! unless $ssh_3par->connect("$hp3par_ip");
    
    $ssh_3par->auth_password("$username","$password") or die "Username/Password not right";
    
    my $chan_3par = $ssh_3par->channel();
   
    $chan_3par->blocking(0);
    
    $chan_3par->exec("$hp3parcmd");
    
    sleep 10;
    open $parafileFH, ">>" , "para.txt" or die "Error:$!. $^E";
    while (<$chan_3par>)
	
	
		
	    next if /Id Name       Persona        -WWN\/iSCSI_Name- Port/;
	    
	    s/^((\s+)?\p{Digit}{1,3}\s)/\n\n-:$hp3par_name $hp3par_ip:-\n$1/;
            
	    print $parafileFH "$_";
     
		
	}
    
}

open(my $emailfile_FH, ">", "logged_out_3par_hosts.txt") or die "Error $!.$^E";
{
local $/ = "\n\n";

open $parafileFH, "<" , "para.txt" or die "Error:$!. $^E";

while (<$parafileFH>)
{
    
	if ($_=~ /---/)
	{
			    print $emailfile_FH "\n\n###***Please check the host below***:###\n\n$_";
			    
			    
	}		    
    
}

}
my $threeparmsg = MIME::Lite->new(
            From    => $mailfrom,
            To      => $mailto,
            Subject => "Please check the mail - Hosts Logged Out.",
            Type    => 'Multipart/mixed',

        );
    
	
        
	$threeparmsg->attach( Type        => 'TEXT',
		       
                      Path        => "logged_out_3par_hosts.txt",
                      Filename    => "logged_out_3par_hosts.txt",
                      Disposition => 'attachment', );
	$threeparmsg->attach( Type        => 'TEXT',
		       
			      Data 	  => "This is an Automated mail sent by $0.\nPlease see the attachment for a list of hosts which are currently logged out from the 3PAR Arrays."
			      );
	
	close $emailfile_FH;
	$threeparmsg->send;
	close $parafileFH;
	
	unlink "logged_out_3par_hosts.txt" or die "Cannot delete logged_out_3par_hosts.txt.$!.$^E";
